""Euler 8
Strategy.
Have a BigSoFar
Convert big number to string
Look at the first thirteen. Calculate product. If bigger than bigsofar,
make it bigsofar.
shift "right" 1. Calculate again. Shift 1000-13 times.
print bigsofar.
"""
# Not copying the question because of huge number.

def strProduct(n): # input a string of numbers, multiply each digit in string.
    product=1
    num=1
    for i in range(0,len(n)):
        num=int(n[i])
        product=product*num
    return product

def Euler8():
    BigNum=("731671765313306249192251196744265747423553491949349698352031"
    "2774506326239578318016984801869478851843858615607891129494954595017"
    "3795833195285320880551112540698747158523863050715693290963295227443"
    "0435576689664895044524452316173185640309871112172238311362229893423"
    "3803081353362766142828064444866452387493035890729629049156044077239"
    "0713810515859307960866701724271218839987979087922749219016997208880"
    "9377665727333001053367881220235421809751254540594752243525849077116"
    "7055601360483958644670632441572215539753697817977846174064955149290"
    "8625693219784686224828397224137565705605749026140797296865241453510"
    "0474821663704844031998900088952434506585412275886668811642717147992"
    "4442928230863465674813919123162824586178664583591245665294765456828"
    "4891288314260769004224219022671055626321111109370544217506941658960"
    "4080719840385096245544436298123098787992724428490918884580156166097"
    "9191338754992005240636899125607176060588611646710940507754100225698"
    "315520005593572972571636269561882670428252483600823257530420752963450")
    i=0
    j=13
    curProduct=1
    BigSoFar=1
    while i<987:
        TestNum=BigNum[i:j]
        curProduct=strProduct(TestNum)
        if curProduct>BigSoFar:
            BigSoFar = curProduct
        i=i+1
        j=j+1
    print(BigSoFar)
Euler8()
